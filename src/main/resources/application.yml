server.port: 8080

spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  datasource:
    url: jdbc:postgresql://${TASKANA_DB_HOST}:${TASKANA_DB_PORT:5432}/${TASKANA_DB_NAME}
    username: ${TASKANA_DB_USER}
    password: ${TASKANA_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

logging:
  level:
    pro:
      taskana: DEBUG
    root: INFO

server:
  servlet:
    context-path: /taskana


taskana:
  schemaName: taskana
  adapter:
    scheduler:
      run:
        interval:
          for:
            start:
              taskana:
                tasks:
                  in:
                    milliseconds: 1000


            complete:
              referenced:
                tasks:
                  in:
                    milliseconds: 1000
            claim:
              referenced:
                tasks:
                  in:
                    milliseconds: 1000

            cancel:
              claim:
                referenced:
                  tasks:
                    in:
                      milliseconds: 1000


            check:
              finished:
                referenced:
                  tasks:
                    in:
                      milliseconds: 1000

taskana.jobscheduler.async.cron: "*/1 * * * * *"

devMode: false

####### Properties for AccessIdController to connect to LDAP
taskana.ldap.serverUrl: ldap://localhost:10389
taskana.ldap.bindDn: uid=admin
taskana.ldap.bindPassword: secret
taskana.ldap.baseDn: ou=Test,O=TASKANA
taskana.ldap.userSearchBase: cn=users
taskana.ldap.userSearchFilterName: objectclass
taskana.ldap.userSearchFilterValue: person
taskana.ldap.userFirstnameAttribute: givenName
taskana.ldap.userLastnameAttribute: sn
taskana.ldap.userFullnameAttribute: cn
taskana.ldap.userPhoneAttribute: phoneNumber
taskana.ldap.userMobilePhoneAttribute: mobileNumber
taskana.ldap.userEmailAttribute: email
taskana.ldap.userOrglevel1Attribute: orgLevel1
taskana.ldap.userOrglevel2Attribute: orgLevel2
taskana.ldap.userOrglevel3Attribute: someDepartement
taskana.ldap.userOrglevel4Attribute: orgLevel4
taskana.ldap.userIdAttribute: uid
taskana.ldap.userMemberOfGroupAttribute: memberOf
taskana.ldap.groupSearchBase: cn=groups
taskana.ldap.groupSearchFilterName: objectclass
taskana.ldap.groupSearchFilterValue: groupofuniquenames
taskana.ldap.groupNameAttribute: cn
taskana.ldap.minSearchForLength: 3
taskana.ldap.maxNumberOfReturnedAccessIds: 50
taskana.ldap.groupsOfUser: uniquemember

# Embedded Spring LDAP server
spring.ldap.embedded.base-dn: OU=Test,O=TASKANA
spring.ldap.embedded.credential.username: uid=admin
spring.ldap.embedded.credential.password: secret
spring.ldap.embedded.ldif: classpath:taskana-example.ldif
spring.ldap.embedded.port: 10389
spring.ldap.embedded.validation.enabled: false

server.tomcat.max-http-form-post-size: -1
server.tomcat.max-save-post-size: -1
server.tomcat.max-swallow-size: -1
####### tomcat is not detecting the x-forward headers from bluemix as a trustworthy proxy
server.tomcat.remoteip.internal-proxies: .*
server.forward-headers-strategy: native

taskana.routing.dmn.upload.path: /tmp/upload.dmn


enableCsrf: false


####### cache static resources properties
spring.web.resources.cache.cachecontrol.cache-private: true
####### for upload of big workbasket- or classification-files
spring.servlet.multipart.max-file-size: 10MB
spring.servlet.multipart.max-request-size: 10MB

####### serve compressed files for faster UI loading times
server.compression.enabled: true
server.compression.mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css,image/svg+xml
server.compression.min-response-size: 10240

generateSampleData: true